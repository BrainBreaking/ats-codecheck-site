"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[624],{8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},9362:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api","title":"API Reference","description":"The ATS CodeCheck library provides the following functions:","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"api","title":"API Reference","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Welcome to ATS CodeCheck","permalink":"/"},"next":{"title":"Integration Example","permalink":"/example"}}');var i=s(4848),t=s(8453);const c={id:"api",title:"API Reference",sidebar_position:2},o="\ud83d\udcd8 API Reference",d={},l=[{value:"<code>int ATS_Init(void);</code>",id:"int-ats_initvoid",level:2},{value:"<code>int ATS_CheckCode(const char* jsonRequest, char* jsonResponseBuffer, int bufferSize);</code>",id:"int-ats_checkcodeconst-char-jsonrequest-char-jsonresponsebuffer-int-buffersize",level:2},{value:"<code>int ATS_GetVersion(char* versionBuffer, int bufferSize);</code>",id:"int-ats_getversionchar-versionbuffer-int-buffersize",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-api-reference",children:"\ud83d\udcd8 API Reference"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"ATS CodeCheck"})," library provides the following functions:"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"int-ats_initvoid",children:(0,i.jsx)(n.code,{children:"int ATS_Init(void);"})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the library. Must be called before any other functions."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," on success"]}),"\n",(0,i.jsx)(n.li,{children:"Non-zero on failure"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int ATS_Init(void);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"int-ats_checkcodeconst-char-jsonrequest-char-jsonresponsebuffer-int-buffersize",children:(0,i.jsx)(n.code,{children:"int ATS_CheckCode(const char* jsonRequest, char* jsonResponseBuffer, int bufferSize);"})}),"\n",(0,i.jsx)(n.p,{children:"Validates a base64-encoded barcode and extracts requested fields."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jsonRequest"}),": JSON string containing the base64 barcode and requested fields."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jsonResponseBuffer"}),": Buffer to store the JSON response."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bufferSize"}),": Size of the response buffer."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," on success"]}),"\n",(0,i.jsx)(n.li,{children:"Non-zero on failure"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int ATS_CheckCode(const char* jsonRequest, char* jsonResponseBuffer, int bufferSize);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"int-ats_getversionchar-versionbuffer-int-buffersize",children:(0,i.jsx)(n.code,{children:"int ATS_GetVersion(char* versionBuffer, int bufferSize);"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the version of the ATS CodeCheck library."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"versionBuffer"}),": Buffer to store the version string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bufferSize"}),": Size of the buffer."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," on success"]}),"\n",(0,i.jsx)(n.li,{children:"Non-zero on failure"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int ATS_GetVersion(char* versionBuffer, int bufferSize);\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);